#!/bin/bash

# Start i counter if needed
[ -f /tmp/docker-i.txt ] || echo 1 > /tmp/docker-i.txt
[ -z $i ] && export i=0
echo $((`cat /tmp/docker-i.txt`+1)) > /tmp/docker-i.txt
i=`cat /tmp/docker-i.txt`


if [ ! -f /tmp/resty ]; then
    echo "Downloading resty from the internet, this is insecure and a terrible idea.  Fix later"
    echo

    wget -qO /tmp/resty http://github.com/micha/resty/raw/master/resty
fi

if [ $CLI_DEBUG -eq 1 ]
then
    DEBUG_FLAG='-v'
else
    DEBUG_FLAG=''
fi

CLI_PORT=${CLI_PORT:-"8080"}

. /tmp/resty
resty http://localhost:${CLI_PORT}/token/__test__ > /dev/null 2>&1

function list-examples
{
    echo "Supported env vars:"
    echo "   CLI_PORT=8080 (default)"
    echo "   CLI_DEBUG=0 (default)"
    echo
    echo "$0 list-containers"
    echo "$0 build-image git://github.com/pmorie/simple-html pmorie/fedora-mock test-app"
    echo "$0 container test-app 0001 8080:6000  # internal:external"
    echo "$0 started 0001"
    echo "$0 stopped 0001"
    echo "$0 log 0001"
    echo "$0 repository not-implemented"
    echo "$0 environment not-implemented"
    echo "$0 repository <container_id> [<git url>]"
    echo "$0 environment <environment_id> <key> <value>"
}

# This can take a minute
function build-image
{
    # Example
    # build-image git://github.com/pmorie/simple-html pmorie/fedora-mock test-app
    CARTRIDGE_SOURCE=$1
    BASE_IMAGE_NAME=$2
    BUILD_TAG=$3

    PUT '/build-image' -q "u=${BUILD_TAG}&d=1&r=${CARTRIDGE_SOURCE}&i=$i&t=${BASE_IMAGE_NAME}" $DEBUG_FLAG
}

function list-containers {
    GET '/containers' -q "u=0&d=0&r=0&t=0&i=$i" $DEBUG_FLAG
}

function container
{
    # Example
    # container test-app 0001
    IMAGE_NAME=$1
    GEAR_ID=$2
    INTERNAL=`echo $3 | awk -F':' '{ print $1 }'`
    EXTERNAL=`echo $3 | awk -F':' '{ print $2 }'`

    #PUT /container -q "u=0&d=1&t=${IMAGE_NAME}&r=${GEAR_ID}&i=$i" -d '{"ports":[{"external":4343,"internal":8080}]}' $DEBUG_FLAG
    PUT /container -q "t=${IMAGE_NAME}&r=${GEAR_ID}" -d '{"ports":[{"external":'${EXTERNAL}',"internal":'${INTERNAL}'}]}' $DEBUG_FLAG
    #PUT /container -q "t=test-app&r=0030" -d '{"ports":[{"external":'${EXTERNAL}',"internal":'${INTERNAL}'}]}' $DEBUG_FLAG
    #echo PUT /container -q "t=test-app&r=0034" -d "{\"ports\":[{\"external\":\"4333\",\"internal\":\"8080\"}]}" $DEBUG_FLAG --verbose
    #PUT /container -q "t=test-app&r=0034" -d "{\"ports\":[{\"external\":\"4333\",\"internal\":\"8080\"}]}" $DEBUG_FLAG --verbose
}

# Not yet working

function started
{
    # Example
    # started 0001

    GEAR_ID=$1
    PUT /container/started -q "u=0&d=1&r=${GEAR_ID}&i=$i" $DEBUG_FLAG
}

function stopped
{
    # Example
    # stopped 0001

    GEAR_ID=$1
    PUT /container/stopped -q "u=0&d=1&r=${GEAR_ID}&i=$i" $DEBUG_FLAG
}

function log
{
    # Example
    # log 0001

    GEAR_ID=$1
    GET /container/log -q "u=0&d=1&r=${GEAR_ID}&i=$i" $DEBUG_FLAG
}

function repository
{
    JOB_ID=$1
    GIT_URL=$2

    if [ -z "$GIT_URL" ]; then
        PUT /repository -q "u=0&d=1&r=${JOB_ID}&i=$i" $DEBUG_FLAG
    else
        PUT /repository -q "u=0&d=1&r=${JOB_ID}&i=$i&t=${GIT_URL}" $DEBUG_FLAG
    fi
}

function environment
{
    ENV_ID=$1
    KEY=$2
    VALUE=$3
    PUT '/environment' -q "u=0&d=1&r=${ENV_ID}&i=$i" -d "{\"env\":[{\"name\":\"${KEY}\",\"value\":\"${VALUE}\"}]}"
    i=$(($i+1))
}

cmd=$1

if [ -z $cmd ]; then
    list-examples
    exit
fi

case "$1" in
    list-examples)  list-examples;;
    list-containers) list-containers;;
    build-image) build-image $2 $3 $4;;
    container) container $2 $3 $4;;
    started) started $2;;
    stopped) stopped $2;;
    log) log $2;;
    repository) repository $2 $3;;
    environment) environment $2 $3 $4;;
esac
